apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  labels:
    app: weather-forecast
spec:
  replicas: 1
  selector:
    matchLabels:
      service: webapp
      
  template:
    metadata:
      labels:
        app: weather-forecast
        service: webapp
    spec:
      containers:
        - name: webapp
          #image: exploredockerducciomugnaini.azurecr.io/webapp:v2
          image: mugna87/webapp:v4
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: WebApiBaseAddress
              value: http://webapi
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
---
kind: Service
apiVersion: v1
metadata:
  name: webapp
  labels:
    app: weather-forecast
    service: webapp
spec:
  # Expose the service on a static port on each node
  # so that we can access the service from outside the cluster 
  #type: NodePort

  # When the node receives a request on the static port (30163)
  # "select pods with the label 'app' set to 'echo-hostname'"
  # and forward the request to one of them
  selector:
    app: weather-forecast
    service: webapp
  
  ports:
    # Three types of ports for a service
    # nodePort - a static port assigned on each the node
    # port - port exposed internally in the cluster
    # targetPort - the container port to send requests to
    - port: 8080
      targetPort: 80